name: EDGE_CASE_TEST_STRATEGY
description: |
  This strategy tests various edge cases in YAML parsing and validation
  including special characters, empty values, and boundary conditions.

steps:
  # Step 1: Action with no parameters (valid for some actions)
  - name: NO_PARAMS_ACTION
    action:
      type: SOME_SIMPLE_ACTION
      # No params field at all
  
  # Step 2: Action with empty parameters object
  - name: EMPTY_PARAMS_ACTION
    action:
      type: ANOTHER_ACTION
      params: {}
  
  # Step 3: Action with null parameters
  - name: NULL_PARAMS_ACTION
    action:
      type: YET_ANOTHER_ACTION
      params: null
  
  # Step 4: Parameters with special characters
  - name: SPECIAL_CHARS_PARAMS
    action:
      type: LOCAL_ID_CONVERTER
      params:
        mapping_file: "/path/with spaces/and-special_chars!@#.csv"
        source_column: "column name with spaces"
        target_column: "column.with.dots"
        output_context_key: "key:with:colons"
  
  # Step 5: Very long parameter values
  - name: LONG_PARAMS
    action:
      type: API_RESOLVER
      params:
        input_context_key: "a_very_long_context_key_name_that_might_cause_issues_in_some_systems_due_to_length_constraints"
        output_context_key: "short"
        api_base_url: "https://very-long-subdomain.with-many-parts.and-hyphens.example.com/api/v1/with/deep/path/structure"
        endpoint_path: "/even/more/path/segments/here/{id}/history"
  
  # Step 6: Unicode and international characters
  - name: UNICODE_PARAMS
    action:
      type: LOCAL_ID_CONVERTER
      params:
        mapping_file: "/ãƒ‡ãƒ¼ã‚¿/æµ‹è¯•æ–‡ä»¶.csv"
        source_column: "Î©_symbol"
        target_column: "ðŸ§¬_emoji"
        description: "Testing with Ã©mojis and spÃ«cial Ã§haracters"
  
  # Step 7: Numeric edge cases
  - name: NUMERIC_EDGE_CASES
    action:
      type: UNIPROT_HISTORICAL_RESOLVER
      params:
        batch_size: 0          # Zero
        max_retries: -1        # Negative
        timeout: 999999999     # Very large
        rate_limit: 0.0001     # Very small float
        precision: 1.23456789012345678901234567890  # Many decimal places
  
  # Step 8: Boolean edge cases
  - name: BOOLEAN_EDGE_CASES
    action:
      type: DATASET_OVERLAP_ANALYZER
      params:
        dataset1_context_key: "ds1"
        dataset2_context_key: "ds2"
        generate_statistics: "true"  # String instead of boolean
        include_metadata: 1          # Number instead of boolean
        verbose: "yes"               # Another string
        debug: "false"               # String false
  
  # Step 9: Nested structures (if supported by actions)
  - name: NESTED_PARAMS
    action:
      type: COMPLEX_ACTION
      params:
        simple_param: "value"
        nested_object:
          key1: "value1"
          key2: "value2"
          deep_nest:
            level3: "deep_value"
        array_param:
          - item1
          - item2
          - item3
        mixed_array:
          - "string"
          - 123
          - true
          - null