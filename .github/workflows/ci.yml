name: Biomapper CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Load cached dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      run: |
        poetry install --with dev,docs,api --no-interaction
    
    - name: Run linting
      run: |
        poetry run ruff check src/ tests/ --exit-zero
        poetry run ruff format --check src/ tests/ --quiet || echo "Format check completed with warnings"
    
    - name: Run type checking
      run: |
        poetry run mypy src/ --ignore-missing-imports --no-error-summary || echo "Type checking completed with warnings"
    
    - name: Run tests
      env:
        DATABASE_URL: "sqlite+aiosqlite:///./test.db"
        LANGFUSE_ENABLED: "false"
        PYTHONPATH: "${{ github.workspace }}/src:$PYTHONPATH"
      run: |
        poetry run pytest -c pytest-ci.ini --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: success()
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false