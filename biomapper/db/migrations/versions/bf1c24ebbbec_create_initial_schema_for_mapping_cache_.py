"""Create initial schema for mapping_cache db

Revision ID: bf1c24ebbbec
Revises: 
Create Date: 2025-04-25 23:38:59.391869

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "bf1c24ebbbec"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entity_mappings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("source_id", sa.String(), nullable=False),
        sa.Column("source_type", sa.String(), nullable=False),
        sa.Column("target_id", sa.String(), nullable=False),
        sa.Column("target_type", sa.String(), nullable=False),
        sa.Column("confidence", sa.Float(), nullable=True),
        sa.Column("mapping_source", sa.String(), nullable=True),
        sa.Column("is_derived", sa.Boolean(), nullable=True),
        sa.Column("derivation_path", sa.Text(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "source_id", "source_type", "target_id", "target_type", name="uix_mapping"
        ),
    )
    with op.batch_alter_table("entity_mappings", schema=None) as batch_op:
        batch_op.create_index("idx_expiration", ["expires_at"], unique=False)
        batch_op.create_index(
            "idx_source_lookup", ["source_id", "source_type"], unique=False
        )
        batch_op.create_index(
            "idx_target_lookup", ["target_id", "target_type"], unique=False
        )
        batch_op.create_index("idx_usage_count", ["usage_count"], unique=False)

    op.create_table(
        "mapping_path_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "path_execution_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("relationship_mapping_path_id", sa.Integer(), nullable=False),
        sa.Column("source_entity_id", sa.String(), nullable=False),
        sa.Column("source_entity_type", sa.String(), nullable=False),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("duration_ms", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "SUCCESS", "FAILURE", "PARTIAL", "TIMED_OUT", name="pathexecutionstatus"
            ),
            nullable=False,
        ),
        sa.Column("log_messages", sa.Text(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("path_execution_logs", schema=None) as batch_op:
        batch_op.create_index(
            "idx_log_source_entity",
            ["source_entity_id", "source_entity_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_path_execution_logs_relationship_mapping_path_id"),
            ["relationship_mapping_path_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_path_execution_logs_source_entity_id"),
            ["source_entity_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_path_execution_logs_source_entity_type"),
            ["source_entity_type"],
            unique=False,
        )

    op.create_table(
        "performance_metrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "entity_mapping_provenance",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("entity_mapping_id", sa.Integer(), nullable=False),
        sa.Column("relationship_mapping_path_id", sa.Integer(), nullable=False),
        sa.Column(
            "execution_timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("executor_version", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["entity_mapping_id"], ["entity_mappings.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("entity_mapping_provenance", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_entity_mapping_provenance_entity_mapping_id"),
            ["entity_mapping_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_entity_mapping_provenance_relationship_mapping_path_id"),
            ["relationship_mapping_path_id"],
            unique=False,
        )

    op.create_table(
        "mapping_metadata",
        sa.Column("mapping_id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("value", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["mapping_id"], ["entity_mappings.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("mapping_id", "key"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("mapping_metadata")
    with op.batch_alter_table("entity_mapping_provenance", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_entity_mapping_provenance_relationship_mapping_path_id")
        )
        batch_op.drop_index(
            batch_op.f("ix_entity_mapping_provenance_entity_mapping_id")
        )

    op.drop_table("entity_mapping_provenance")
    op.drop_table("performance_metrics")
    with op.batch_alter_table("path_execution_logs", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_path_execution_logs_source_entity_type"))
        batch_op.drop_index(batch_op.f("ix_path_execution_logs_source_entity_id"))
        batch_op.drop_index(
            batch_op.f("ix_path_execution_logs_relationship_mapping_path_id")
        )
        batch_op.drop_index("idx_log_source_entity")

    op.drop_table("path_execution_logs")
    op.drop_table("mapping_path_history")
    with op.batch_alter_table("entity_mappings", schema=None) as batch_op:
        batch_op.drop_index("idx_usage_count")
        batch_op.drop_index("idx_target_lookup")
        batch_op.drop_index("idx_source_lookup")
        batch_op.drop_index("idx_expiration")

    op.drop_table("entity_mappings")
    # ### end Alembic commands ###
