name: semantic_metabolite_matching_example
description: |
  Example strategy demonstrating the SEMANTIC_METABOLITE_MATCH action.
  This strategy uses LLM-based semantic matching with embeddings to find
  metabolites that couldn't be matched through traditional methods.

steps:
  # Step 1: Load unmatched metabolites from previous matching attempts
  - name: load_unmatched_metabolites
    action:
      type: LOAD_DATASET_IDENTIFIERS
      params:
        file_path: "${DATA_DIR}/results/arivale_unmatched_tier2.csv"
        identifier_column: "BIOCHEMICAL_NAME"
        dataset_name: "arivale_unmatched"
        additional_columns:
          - "SUPER_PATHWAY"
          - "SUB_PATHWAY"
          - "HMDB_ID"
          - "KEGG_ID"
          - "PLATFORM"

  # Step 2: Load reference metabolites to match against
  - name: load_nightingale_reference
    action:
      type: LOAD_DATASET_IDENTIFIERS
      params:
        file_path: "${DATA_DIR}/results/nightingale_reference.csv"
        identifier_column: "unified_name"
        dataset_name: "nightingale_reference"
        additional_columns:
          - "description"
          - "category"
          - "unit"
          - "abbreviation"

  # Step 3: Perform semantic matching using embeddings and LLM validation
  - name: semantic_metabolite_matching
    action:
      type: SEMANTIC_METABOLITE_MATCH
      params:
        unmatched_dataset: "arivale_unmatched"
        reference_map: "nightingale_reference"
        context_fields:
          arivale:
            - "BIOCHEMICAL_NAME"
            - "SUPER_PATHWAY"
            - "SUB_PATHWAY"
          nightingale:
            - "unified_name"
            - "description"
            - "category"
        embedding_model: "text-embedding-ada-002"
        llm_model: "gpt-4"
        confidence_threshold: 0.75
        embedding_similarity_threshold: 0.85
        include_reasoning: true
        max_llm_calls: 100
        batch_size: 10
        output_key: "semantic_matches"
        unmatched_key: "final_unmatched"

  # Step 4: Export matched results
  - name: export_semantic_matches
    action:
      type: EXPORT_DATASET
      params:
        dataset_key: "semantic_matches"
        output_file: "${OUTPUT_DIR}/semantic_matches.csv"
        format: "csv"

  # Step 5: Export final unmatched metabolites
  - name: export_final_unmatched
    action:
      type: EXPORT_DATASET
      params:
        dataset_key: "final_unmatched"
        output_file: "${OUTPUT_DIR}/final_unmatched.csv"
        format: "csv"

  # Step 6: Generate enhancement report for semantic matches
  - name: generate_semantic_match_report
    action:
      type: GENERATE_ENHANCEMENT_REPORT
      params:
        match_results_key: "semantic_matches"
        dataset_name: "Arivale Metabolomics"
        reference_name: "Nightingale NMR"
        output_file: "${OUTPUT_DIR}/semantic_match_report.md"
        include_statistics: true
        include_examples: true
        max_examples: 10
        confidence_bins:
          - min: 0.9
            max: 1.0
            label: "Very High Confidence"
          - min: 0.8
            max: 0.9
            label: "High Confidence"
          - min: 0.75
            max: 0.8
            label: "Moderate Confidence"

# Configuration for environment variables
environment:
  DATA_DIR: "/home/ubuntu/biomapper/data"
  OUTPUT_DIR: "/home/ubuntu/biomapper/data/results/semantic_matching"
  OPENAI_API_KEY: "${OPENAI_API_KEY}"  # Should be set in .env file
  SEMANTIC_MATCH_CACHE_DIR: "/tmp/biomapper/semantic_cache"

# Metadata
metadata:
  version: "1.0.0"
  author: "Biomapper Team"
  tags:
    - "metabolomics"
    - "semantic-matching"
    - "llm"
    - "embeddings"
  expected_runtime: "10-30 minutes depending on dataset size"
  api_costs:
    embedding: "~$0.0001 per metabolite"
    llm_validation: "~$0.01 per validation call"
    estimated_total: "$1-5 for 100-500 metabolites"