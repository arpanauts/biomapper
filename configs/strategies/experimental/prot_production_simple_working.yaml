name: prot_production_simple_working
description: Working production protein mapping with Google Drive sync - no visualizations
parameters:
  source_file: /procedure/data/local_data/ARIVALE_SNAPSHOTS/proteomics_metadata.tsv
  target_file: /procedure/data/local_data/MAPPING_ONTOLOGIES/kg2c_ontologies/kg2c_proteins.csv
  output_dir: /tmp/biomapper/protein_mapping_working_gdrive
  drive_folder_id: ${GOOGLE_DRIVE_FOLDER_ID:-1oQ7CczccH2a6oYYFMo_sf8fXtxF8au_D}
  arivale_id_column: uniprot
  kg2c_id_column: id
steps:
- name: load_arivale_proteins
  action:
    type: LOAD_DATASET_IDENTIFIERS
    params:
      file_path: ${parameters.source_file}
      identifier_column: ${parameters.arivale_id_column}
      output_key: arivale_raw
- name: load_kg2c_entities
  action:
    type: LOAD_DATASET_IDENTIFIERS
    params:
      file_path: ${parameters.target_file}
      identifier_column: ${parameters.kg2c_id_column}
      output_key: kg2c_raw
      delimiter: ','
- name: parse_composite_identifiers
  action:
    type: PARSE_COMPOSITE_IDENTIFIERS
    params:
      input_key: arivale_raw
      identifier_column: ${parameters.arivale_id_column}
      separators:
      - ','
      - ;
      - '|'
      output_key: arivale_parsed
      track_expansion: true
      skip_empty: false
      trim_whitespace: true
      preserve_order: true
- name: extract_kg2c_uniprot
  action:
    type: PROTEIN_EXTRACT_UNIPROT_FROM_XREFS
    params:
      input_key: kg2c_raw
      xrefs_column: xrefs
      output_column: extracted_uniprot
      output_key: kg2c_with_uniprot
      handle_multiple: expand_rows
      keep_isoforms: false
      drop_na: true
- name: normalize_arivale
  action:
    type: PROTEIN_NORMALIZE_ACCESSIONS
    params:
      input_key: arivale_parsed
      id_columns:
      - ${parameters.arivale_id_column}
      strip_isoforms: true
      strip_versions: true
      validate_format: true
      output_key: arivale_normalized
      add_normalization_log: true
- name: normalize_kg2c
  action:
    type: PROTEIN_NORMALIZE_ACCESSIONS
    params:
      input_key: kg2c_with_uniprot
      id_columns:
      - extracted_uniprot
      strip_isoforms: true
      strip_versions: true
      validate_format: true
      output_key: kg2c_normalized
      add_normalization_log: true
- name: merge_direct
  action:
    type: MERGE_DATASETS
    params:
      input_key: arivale_normalized
      dataset2_key: kg2c_normalized
      join_columns:
        ${parameters.arivale_id_column}: extracted_uniprot
      output_key: direct_matches
      join_type: inner
- name: calculate_mapping_statistics
  action:
    type: CUSTOM_TRANSFORM
    params:
      input_key: direct_matches
      output_key: mapping_statistics
      transformations:
      - type: python_expression
        expression: "import pandas as pd\n\n# Calculate comprehensive mapping statistics\n\
          total_matches = len(df)\nunique_arivale = df['${parameters.arivale_id_column}'].nunique()\
          \ if total_matches > 0 else 0\nunique_kg2c = df['extracted_uniprot'].nunique()\
          \ if total_matches > 0 else 0\n\n# Get original counts from context\ntotal_arivale\
          \ = len(context['datasets']['arivale_normalized'])\ntotal_kg2c = len(context['datasets']['kg2c_normalized'])\n\
          \nmapping_rate = unique_arivale / total_arivale if total_arivale > 0 else\
          \ 0\n\n# Get composite expansion stats if available\nexpansion_stats = context.get('statistics',\
          \ {}).get('composite_expansion', {})\n\nstats = [{\n    'total_arivale_proteins':\
          \ total_arivale,\n    'total_kg2c_proteins': total_kg2c,\n    'direct_matches':\
          \ total_matches,\n    'unique_arivale_mapped': unique_arivale,\n    'unique_kg2c_mapped':\
          \ unique_kg2c,\n    'arivale_mapping_rate': mapping_rate,\n    'composite_original_count':\
          \ expansion_stats.get('original_count', 0),\n    'composite_expanded_count':\
          \ expansion_stats.get('expanded_count', 0),\n    'composite_expansion_rate':\
          \ expansion_stats.get('expansion_rate', 0)\n}]\n\nstats\n"
- name: export_direct_matches
  action:
    type: EXPORT_DATASET
    params:
      input_key: direct_matches
      output_path: ${parameters.output_dir}/direct_matches.tsv
      format: tsv
- name: export_mapping_statistics
  action:
    type: EXPORT_DATASET
    params:
      input_key: mapping_statistics
      output_path: ${parameters.output_dir}/mapping_statistics.json
      format: json
- name: sync_to_google_drive
  action:
    type: SYNC_TO_GOOGLE_DRIVE_V2
    params:
      drive_folder_id: ${parameters.drive_folder_id}
      credentials_path: ${GOOGLE_APPLICATION_CREDENTIALS}
      auto_organize: true
      strategy_name: prot_production_simple_working
      strategy_version: working-1.0
      create_subfolder: true
      subfolder_name: working_run_${TIMESTAMP:-$(date +%Y%m%d_%H%M%S)}
      sync_context_outputs: true
      description: Working protein mapping results - Arivale to KG2C with end-to-end
        validation
      file_patterns:
      - '*.tsv'
      - '*.json'
      exclude_patterns:
      - '*.tmp'
      - '*.log'
metadata:
  version: working-1.0
  created_date: '2025-08-15'
  purpose: End-to-end validation of working protein mapping with Google Drive integration
  features:
  - Real production data processing
  - Composite identifier parsing
  - UniProt extraction and normalization
  - Direct protein matching
  - Google Drive sync with auto-organization
