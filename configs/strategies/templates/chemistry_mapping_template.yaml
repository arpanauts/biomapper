# Clinical Chemistry/Lab Test Mapping Strategy Template
# Instructions: Copy this template and fill in the specific values for your mapping

metadata:
  # Identity (all required - update these)
  id: "chem_SOURCE_to_TARGET_BRIDGE_v1_base"  # Follow naming convention
  name: "SOURCE Clinical Labs to TARGET via BRIDGE"
  version: "1.0.0"
  created: "YYYY-MM-DD"
  author: "your-name"
  entity_type: "chemistries"
  source_dataset: "SOURCE_CODE"  # arv|ukb|isr|fnh|osp
  target_dataset: "TARGET_CODE"  # kg2c|spoke|unified
  bridge_type: ["BRIDGE_TYPE"]   # loinc|labcorp|semantic|multi
  
  # Quality tracking (required)
  quality_tier: "experimental"
  validation_status: "pending"
  expected_match_rate: 0.75     # Clinical tests typically 70-85%
  actual_match_rate: null
  
  # Data tracking (required - update paths)
  source_files:
    - path: "/procedure/data/local_data/MAPPING_ONTOLOGIES/SOURCE/FILE.tsv"
      last_updated: "YYYY-MM-DD"
      row_count: null
  target_files:
    - path: "/procedure/data/local_data/MAPPING_ONTOLOGIES/TARGET/FILE.csv"
      last_updated: "YYYY-MM-DD"
      row_count: null
  
  # Optional but recommended
  description: "Maps SOURCE clinical lab tests to TARGET ontology using BRIDGE identifiers"
  tags: ["clinical", "laboratory", "BRIDGE", "SOURCE", "TARGET"]
  dependencies: []
  supersedes: null
  citation: null

# Runtime parameters
parameters:
  output_dir: "${OUTPUT_DIR:-/tmp/biomapper/outputs}"
  min_confidence: 0.75
  enable_fuzzy_matching: true
  normalize_units: true  # Important for lab tests
  max_retries: 3

# Strategy implementation
steps:
  # Step 1: Load source chemistry tests
  - name: load_source_tests
    action:
      type: LOAD_DATASET_IDENTIFIERS
      params:
        file_path: "${metadata.source_files[0].path}"
        identifier_column: "COLUMN_NAME"  # Update (e.g., "Name", "test_name")
        output_key: "source_tests"
        additional_columns: ["loinc_id", "units", "category"]  # If available
        drop_empty: true
        normalize_names: true
        statistics_key: "source_stats"

  # Step 2: Load target clinical labs
  - name: load_target_labs
    action:
      type: LOAD_DATASET_IDENTIFIERS
      params:
        file_path: "${metadata.target_files[0].path}"
        identifier_column: "COLUMN_NAME"  # Update
        output_key: "target_labs"
        parse_xrefs: true
        statistics_key: "target_stats"

  # Step 3: LOINC-based matching (if available)
  - name: loinc_match
    action:
      type: FILTER_DATASET  # Or custom LOINC matching action
      params:
        source_key: "source_tests"
        target_key: "target_labs"
        match_column: "loinc_code"
        output_key: "loinc_matched"
        unmatched_key: "unmatched_after_loinc"
        statistics_key: "loinc_match_stats"

  # Step 4: Name-based matching for remaining
  - name: name_match
    action:
      type: SEMANTIC_METABOLITE_MATCH  # Can work for lab tests too
      params:
        source_key: "unmatched_after_loinc"
        target_key: "target_labs"
        match_on: "test_name"
        similarity_threshold: 0.85
        normalize_text: true
        output_key: "name_matched"
        unmatched_key: "final_unmatched"
        statistics_key: "name_match_stats"

  # Step 5: Combine all matches
  - name: merge_matches
    action:
      type: MERGE_DATASETS
      params:
        dataset_keys: ["loinc_matched", "name_matched"]
        output_key: "all_matched"
        deduplication_column: "id"
        statistics_key: "merge_stats"

  # Step 6: Calculate metrics
  - name: calculate_overlap
    action:
      type: CALCULATE_SET_OVERLAP
      params:
        dataset1_key: "source_tests"
        dataset2_key: "all_matched"
        identifier_column: "id"
        output_key: "overlap_metrics"

  # Step 7: Generate category analysis
  - name: analyze_by_category
    action:
      type: FILTER_DATASET
      params:
        dataset_key: "all_matched"
        group_by: "category"  # If test categories exist
        calculate_stats: true
        output_key: "category_analysis"

  # Step 8: Export results
  - name: export_matched
    action:
      type: EXPORT_DATASET
      params:
        dataset_key: "all_matched"
        output_format: "tsv"
        output_path: "${parameters.output_dir}/${metadata.id}_matched.tsv"
        include_metadata: true
        columns_order: ["source_id", "target_id", "loinc_code", "test_name", "confidence"]

  - name: export_unmatched
    action:
      type: EXPORT_DATASET
      params:
        dataset_key: "final_unmatched"
        output_format: "tsv"
        output_path: "${parameters.output_dir}/${metadata.id}_unmatched.tsv"

  - name: export_report
    action:
      type: GENERATE_REPORT
      params:
        statistics_keys: ["source_stats", "loinc_match_stats", "name_match_stats", "merge_stats", "category_analysis"]
        output_format: "html"
        output_path: "${parameters.output_dir}/${metadata.id}_report.html"
        include_charts: true