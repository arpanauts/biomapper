"""Add state persistence tables

Revision ID: ada2dc5c241a
Revises: 
Create Date: 2025-08-06 07:25:53.116495

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ada2dc5c241a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('step_name', sa.String(length=255), nullable=True),
    sa.Column('step_index', sa.Integer(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('delivered', sa.Boolean(), nullable=True),
    sa.Column('delivery_attempts', sa.Integer(), nullable=True),
    sa.Column('delivery_error', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_events_delivered', 'job_events', ['delivered', 'timestamp'], unique=False)
    op.create_index('idx_events_job_type', 'job_events', ['job_id', 'event_type'], unique=False)
    op.create_index('idx_events_timestamp', 'job_events', ['timestamp'], unique=False)
    op.create_index(op.f('ix_job_events_job_id'), 'job_events', ['job_id'], unique=False)
    op.create_index(op.f('ix_job_events_timestamp'), 'job_events', ['timestamp'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('strategy_name', sa.String(length=255), nullable=False),
    sa.Column('strategy_version', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'VALIDATING', 'RUNNING', 'PAUSED', 'COMPLETED', 'FAILED', 'CANCELLED', name='jobstatus'), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('current_step_index', sa.Integer(), nullable=True),
    sa.Column('total_steps', sa.Integer(), nullable=True),
    sa.Column('progress_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('input_parameters', sa.JSON(), nullable=False),
    sa.Column('execution_options', sa.JSON(), nullable=False),
    sa.Column('strategy_config', sa.JSON(), nullable=False),
    sa.Column('final_results', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('error_traceback', sa.Text(), nullable=True),
    sa.Column('cpu_seconds', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('memory_mb_peak', sa.Integer(), nullable=True),
    sa.Column('execution_time_ms', sa.BigInteger(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_jobs_status_created', 'jobs', ['status', 'created_at'], unique=False)
    op.create_index('idx_jobs_strategy_status', 'jobs', ['strategy_name', 'status'], unique=False)
    op.create_index(op.f('ix_jobs_created_at'), 'jobs', ['created_at'], unique=False)
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    op.create_index(op.f('ix_jobs_strategy_name'), 'jobs', ['strategy_name'], unique=False)
    op.create_table('execution_checkpoints',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('step_index', sa.Integer(), nullable=False),
    sa.Column('checkpoint_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('storage_type', sa.String(length=50), nullable=True),
    sa.Column('storage_path', sa.Text(), nullable=True),
    sa.Column('size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('compressed', sa.Boolean(), nullable=True),
    sa.Column('is_resumable', sa.Boolean(), nullable=True),
    sa.Column('step_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_checkpoints_job_step', 'execution_checkpoints', ['job_id', 'step_index'], unique=False)
    op.create_index(op.f('ix_execution_checkpoints_created_at'), 'execution_checkpoints', ['created_at'], unique=False)
    op.create_index(op.f('ix_execution_checkpoints_expires_at'), 'execution_checkpoints', ['expires_at'], unique=False)
    op.create_table('execution_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('step_index', sa.Integer(), nullable=True),
    sa.Column('log_level', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('component', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_logs_job_level', 'execution_logs', ['job_id', 'log_level'], unique=False)
    op.create_index('idx_logs_timestamp', 'execution_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_execution_logs_created_at'), 'execution_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_execution_logs_job_id'), 'execution_logs', ['job_id'], unique=False)
    op.create_table('execution_steps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('step_index', sa.Integer(), nullable=False),
    sa.Column('step_name', sa.String(length=255), nullable=False),
    sa.Column('action_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'VALIDATING', 'RUNNING', 'PAUSED', 'COMPLETED', 'FAILED', 'CANCELLED', name='jobstatus'), nullable=False),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('duration_ms', sa.BigInteger(), nullable=True),
    sa.Column('input_params', sa.JSON(), nullable=True),
    sa.Column('output_results', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_traceback', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('can_retry', sa.Boolean(), nullable=True),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_matched', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('memory_used_mb', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_steps_job_index', 'execution_steps', ['job_id', 'step_index'], unique=True)
    op.create_index('idx_steps_status', 'execution_steps', ['status'], unique=False)
    op.create_table('result_storage',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('step_index', sa.Integer(), nullable=True),
    sa.Column('result_key', sa.String(length=255), nullable=False),
    sa.Column('storage_type', sa.String(length=50), nullable=False),
    sa.Column('inline_data', sa.JSON(), nullable=True),
    sa.Column('external_path', sa.Text(), nullable=True),
    sa.Column('size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('encoding', sa.String(length=50), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('accessed_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_results_expires', 'result_storage', ['expires_at'], unique=False)
    op.create_index('idx_results_job_key', 'result_storage', ['job_id', 'step_index', 'result_key'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_results_job_key', table_name='result_storage')
    op.drop_index('idx_results_expires', table_name='result_storage')
    op.drop_table('result_storage')
    op.drop_index('idx_steps_status', table_name='execution_steps')
    op.drop_index('idx_steps_job_index', table_name='execution_steps')
    op.drop_table('execution_steps')
    op.drop_index(op.f('ix_execution_logs_job_id'), table_name='execution_logs')
    op.drop_index(op.f('ix_execution_logs_created_at'), table_name='execution_logs')
    op.drop_index('idx_logs_timestamp', table_name='execution_logs')
    op.drop_index('idx_logs_job_level', table_name='execution_logs')
    op.drop_table('execution_logs')
    op.drop_index(op.f('ix_execution_checkpoints_expires_at'), table_name='execution_checkpoints')
    op.drop_index(op.f('ix_execution_checkpoints_created_at'), table_name='execution_checkpoints')
    op.drop_index('idx_checkpoints_job_step', table_name='execution_checkpoints')
    op.drop_table('execution_checkpoints')
    op.drop_index(op.f('ix_jobs_strategy_name'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_created_at'), table_name='jobs')
    op.drop_index('idx_jobs_strategy_status', table_name='jobs')
    op.drop_index('idx_jobs_status_created', table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_job_events_timestamp'), table_name='job_events')
    op.drop_index(op.f('ix_job_events_job_id'), table_name='job_events')
    op.drop_index('idx_events_timestamp', table_name='job_events')
    op.drop_index('idx_events_job_type', table_name='job_events')
    op.drop_index('idx_events_delivered', table_name='job_events')
    op.drop_table('job_events')
    # ### end Alembic commands ###
