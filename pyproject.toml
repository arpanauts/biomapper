[tool.poetry]
name = "biomapper"
version = "0.1.0"
description = "A unified Python toolkit for biological data harmonization and ontology mapping"
authors = ["Trent Leslie <trent.leslie@phenomehealth.org>"]
license = "MIT"
readme = "README.md"
packages = [{include = "biomapper"}]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.25.1"
pandas = "^2.0.0"
sqlalchemy = "^1.4.0"
pyyaml = "^6.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.14.0"
mypy = "^1.7.0"
ruff = "^0.1.6"
jupyter = "^1.1.1"
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=biomapper --cov-report=term-missing"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I"]  # Error, Pyflakes, Isort rules

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.coverage.run]
source = ["biomapper"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
