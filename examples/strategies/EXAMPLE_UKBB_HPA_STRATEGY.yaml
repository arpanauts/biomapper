name: UKBB_HPA_PROTEIN_MAPPING
version: "1.0.0"
description: |
  Map UK Biobank proteins to Human Protein Atlas proteins using UniProt IDs.
  Handles composite IDs and historical UniProt resolution.

metadata:
  created_date: "2024-01-15"
  author: "Biomapper MVP"
  tags: ["protein", "ukbb", "hpa", "uniprot"]

# Define file paths and configurations
config:
  ukbb_file: "/data/proteins/ukbb/UKBB_Protein_Meta.tsv"
  hpa_file: "/data/proteins/hpa/hpa_osps.csv"
  output_dir: "/results/protein_mappings/ukbb_hpa/"
  
steps:
  # Step 1: Load UKBB proteins
  - name: load_ukbb_proteins
    action:
      type: LOAD_DATASET_IDENTIFIERS
      params:
        file_path: "${config.ukbb_file}"
        column_mappings:
          - column_name: "UniProt"
            identifier_type: "uniprot_accession"
            is_primary: true
            is_composite: true
            composite_separator: "_"
          - column_name: "Assay"
            identifier_type: "protein_name"
          - column_name: "Panel"
            identifier_type: "research_panel"
        drop_empty_primary: true
        output_key: "ukbb_raw"

  # Step 2: Load HPA proteins
  - name: load_hpa_proteins
    action:
      type: LOAD_DATASET_IDENTIFIERS
      params:
        file_path: "${config.hpa_file}"
        column_mappings:
          - column_name: "uniprot"
            identifier_type: "uniprot_accession"
            is_primary: true
            is_composite: true
            composite_separator: "_"
          - column_name: "gene"
            identifier_type: "gene_symbol"
          - column_name: "organ"
            identifier_type: "tissue_type"
        drop_empty_primary: true
        output_key: "hpa_raw"

  # Step 3: Resolve UKBB historical UniProt IDs
  - name: resolve_ukbb_historical
    action:
      type: RESOLVE_CROSS_REFERENCES
      params:
        input_key: "ukbb_raw"
        source_column: "UniProt"
        target_database: "uniprot"
        api_type: "historical"
        result_column: "UniProt_Current"
        confidence_column: "UniProt_Confidence"
        batch_size: 100
        cache_results: true
        include_failed: true
        output_key: "ukbb_resolved"

  # Step 4: Resolve HPA historical UniProt IDs
  - name: resolve_hpa_historical
    action:
      type: RESOLVE_CROSS_REFERENCES
      params:
        input_key: "hpa_raw"
        source_column: "uniprot"
        target_database: "uniprot"
        api_type: "historical"
        result_column: "uniprot_current"
        confidence_column: "uniprot_confidence"
        batch_size: 100
        cache_results: true
        include_failed: true
        output_key: "hpa_resolved"

  # Step 5: Merge datasets on resolved UniProt IDs
  - name: merge_proteins
    action:
      type: MERGE_DATASETS
      params:
        left_dataset: "ukbb_resolved"
        right_dataset: "hpa_resolved"
        join_conditions:
          - left_column: "UniProt_Current"
            right_column: "uniprot_current"
            match_type: "exact"
        how: "outer"
        suffixes:
          left: "_ukbb"
          right: "_hpa"
        output_key: "merged_proteins"

  # Step 6: Calculate overlap statistics
  - name: calculate_overlap
    action:
      type: CALCULATE_SET_OVERLAP
      params:
        set_a_key: "ukbb_resolved"
        set_b_key: "hpa_resolved"
        compare_columns:
          - a_column: "UniProt_Current"
            b_column: "uniprot_current"
        set_a_name: "UKBB"
        set_b_name: "HPA"
        output_key: "overlap_analysis"

  # Step 7: Aggregate by panel and organ
  - name: aggregate_by_categories
    action:
      type: AGGREGATE_STATISTICS
      params:
        input_key: "merged_proteins"
        group_by_columns: ["Panel", "organ"]
        aggregations:
          - column: "UniProt_Current"
            functions: ["count", "nunique"]
            result_prefix: "proteins_"
          - column: "UniProt_Confidence"
            functions: ["mean", "min"]
            result_prefix: "confidence_"
        include_totals: true
        output_key: "category_statistics"

  # Step 8: Filter to high-confidence mappings only
  - name: filter_high_confidence
    action:
      type: FILTER_ROWS
      params:
        input_key: "merged_proteins"
        conditions:
          - column: "UniProt_Confidence"
            operator: "ge"
            value: 0.95
          - column: "uniprot_confidence"
            operator: "ge"
            value: 0.95
        combine_method: "and"
        output_key: "high_confidence_mappings"

  # Step 9: Generate comprehensive report
  - name: generate_report
    action:
      type: GENERATE_MAPPING_REPORT
      params:
        primary_data: "merged_proteins"
        additional_datasets:
          - key: "high_confidence_mappings"
            sheet_name: "High_Confidence_Only"
          - key: "category_statistics"
            sheet_name: "Statistics_By_Category"
        statistics_keys: 
          - "overlap_analysis"
        output_format: "excel"
        output_path: "${config.output_dir}/ukbb_hpa_protein_mapping_${timestamp}.xlsx"
        summary_sheet:
          enabled: true
          include_plots: true
          plot_types:
            - type: "venn_diagram"
              data_key: "overlap_analysis"
            - type: "bar_chart"
              data_key: "category_statistics"
              x: "Panel"
              y: "proteins_nunique"
        metadata_to_include:
          - source_files
          - processing_date
          - total_rows_processed
          - api_calls_made